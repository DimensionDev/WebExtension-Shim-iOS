return (function () { arguments[0].register([], function (exports_1, context_1) {
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            (function (modules) {
                function webpackJsonpCallback(data) {
                    var chunkIds = data[0];
                    var moreModules = data[1];
                    var executeModules = data[2];
                    var moduleId, chunkId, i = 0, resolves = [];
                    for (; i < chunkIds.length; i++) {
                        chunkId = chunkIds[i];
                        if (Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
                            resolves.push(installedChunks[chunkId][0]);
                        }
                        installedChunks[chunkId] = 0;
                    }
                    for (moduleId in moreModules) {
                        if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
                            modules[moduleId] = moreModules[moduleId];
                        }
                    }
                    if (parentJsonpFunction)
                        parentJsonpFunction(data);
                    while (resolves.length) {
                        resolves.shift()();
                    }
                    deferredModules.push.apply(deferredModules, executeModules || []);
                    return checkDeferredModules();
                }
                ;
                function checkDeferredModules() {
                    var result;
                    for (var i = 0; i < deferredModules.length; i++) {
                        var deferredModule = deferredModules[i];
                        var fulfilled = true;
                        for (var j = 1; j < deferredModule.length; j++) {
                            var depId = deferredModule[j];
                            if (installedChunks[depId] !== 0)
                                fulfilled = false;
                        }
                        if (fulfilled) {
                            deferredModules.splice(i--, 1);
                            result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
                        }
                    }
                    return result;
                }
                var installedModules = {};
                var installedChunks = {
                    166: 0
                };
                var deferredModules = [];
                var isChrome = typeof chrome !== 'undefined';
                function sendRuntimeMessage(message) {
                    return isChrome
                        ? new Promise(resolve => {
                            chrome.runtime.sendMessage(message, resolve);
                        })
                        : browser.runtime.sendMessage(message);
                }
                function jsonpScriptSrc(chunkId) {
                    return __webpack_require__.p + "js/" + ({ "0": "npm.idb", "2": "npm.bip39", "156": "npm.arweave", "157": "npm.axios", "158": "npm.jsonwebtoken", "159": "npm.lodash.includes", "160": "npm.semver", "161": "npm.tslib", "162": "npm.webcrypto-liner", "173": "npm.walletconnect" }[chunkId] || chunkId) + ".chunk.js";
                }
                function webextScriptSrc(chunkId) {
                    var publicPath = __webpack_require__.p;
                    var scriptSrcPath = publicPath + "js/" + ({ "0": "npm.idb", "2": "npm.bip39", "156": "npm.arweave", "157": "npm.axios", "158": "npm.jsonwebtoken", "159": "npm.lodash.includes", "160": "npm.semver", "161": "npm.tslib", "162": "npm.webcrypto-liner", "173": "npm.walletconnect" }[chunkId] || chunkId) + ".chunk.js";
                    if (!publicPath || !publicPath.includes('://')) {
                        return (isChrome ? chrome : browser).runtime.getURL(scriptSrcPath);
                    }
                    else {
                        return scriptSrcPath;
                    }
                }
                function __webpack_require__(moduleId) {
                    if (installedModules[moduleId]) {
                        return installedModules[moduleId].exports;
                    }
                    var module = installedModules[moduleId] = {
                        i: moduleId,
                        l: false,
                        exports: {}
                    };
                    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
                    module.l = true;
                    return module.exports;
                }
                __webpack_require__.e = function requireEnsure(chunkId) {
                    var promises = [];
                    var installedChunkData = installedChunks[chunkId];
                    if (installedChunkData !== 0) {
                        if (installedChunkData) {
                            promises.push(installedChunkData[2]);
                        }
                        else {
                            var promise = new Promise(function (resolve, reject) {
                                installedChunkData = installedChunks[chunkId] = [resolve, reject];
                            });
                            promises.push(installedChunkData[2] = promise);
                            var script = webextScriptSrc(chunkId);
                            var onScriptComplete;
                            var error = new Error();
                            onScriptComplete = function (event) {
                                clearTimeout(timeout);
                                var chunk = installedChunks[chunkId];
                                if (chunk !== 0) {
                                    if (chunk) {
                                        var errorType = event && (event.type === 'load' ? 'missing' : event.type);
                                        error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + script + ')';
                                        error.name = 'ChunkLoadError';
                                        error.type = errorType;
                                        error.request = script;
                                        chunk[1](error);
                                    }
                                    installedChunks[chunkId] = undefined;
                                }
                            };
                            var timeout = setTimeout(function () {
                                onScriptComplete({ type: 'timeout' });
                            }, 120000);
                            context_1.import(script).catch(() => ({ type: 'missing' }))
                                .then(event => installedChunks[chunkId] !== 0
                                ? sendRuntimeMessage({ type: 'WTW_INJECT', file: jsonpScriptSrc(chunkId) })
                                : event)
                                .then(onScriptComplete, () => onScriptComplete({ type: 'missing' }));
                        }
                    }
                    return Promise.all(promises);
                };
                __webpack_require__.m = modules;
                __webpack_require__.c = installedModules;
                __webpack_require__.d = function (exports, name, getter) {
                    if (!__webpack_require__.o(exports, name)) {
                        Object.defineProperty(exports, name, { enumerable: true, get: getter });
                    }
                };
                __webpack_require__.r = function (exports) {
                    if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
                        Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
                    }
                    Object.defineProperty(exports, '__esModule', { value: true });
                };
                __webpack_require__.t = function (value, mode) {
                    if (mode & 1)
                        value = __webpack_require__(value);
                    if (mode & 8)
                        return value;
                    if ((mode & 4) && typeof value === 'object' && value && value.__esModule)
                        return value;
                    var ns = Object.create(null);
                    __webpack_require__.r(ns);
                    Object.defineProperty(ns, 'default', { enumerable: true, value: value });
                    if (mode & 2 && typeof value != 'string')
                        for (var key in value)
                            __webpack_require__.d(ns, key, function (key) { return value[key]; }.bind(null, key));
                    return ns;
                };
                __webpack_require__.n = function (module) {
                    var getter = module && module.__esModule ?
                        function getDefault() { return module['default']; } :
                        function getModuleExports() { return module; };
                    __webpack_require__.d(getter, 'a', getter);
                    return getter;
                };
                __webpack_require__.o = function (object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
                __webpack_require__.p = "";
                __webpack_require__.oe = function (err) { console.error(err); throw err; };
                var jsonpArray = globalThis["webpackJsonp"] = globalThis["webpackJsonp"] || [];
                var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
                jsonpArray.push = webpackJsonpCallback;
                jsonpArray = jsonpArray.slice();
                for (var i = 0; i < jsonpArray.length; i++)
                    webpackJsonpCallback(jsonpArray[i]);
                var parentJsonpFunction = oldJsonpFunction;
                deferredModules.push([1517, 1, 3, 4, 6, 5, 9, 8, 7, 62, 141, 138, 140, 145, 143, 134, 144, 73, 133, 150, 54, 131, 127, 63, 19, 93, 21, 102, 110, 72, 111, 136, 49, 91, 126, 78, 135, 96, 50, 84, 122, 59, 139, 121, 68, 142, 61, 55, 146, 41, 76, 24, 11, 108, 109, 92, 87, 69, 115, 70, 90, 42, 46, 22, 149, 106, 47, 128, 83, 18, 104, 105, 57, 75, 130, 45, 117, 118, 114, 74, 31, 36, 56, 48, 60, 51, 12, 14, 29, 28, 89, 52, 82, 67, 35, 37, 77, 38, 137, 40, 23, 34, 98, 44, 119, 27, 94, 120, 101, 66, 123, 97, 81, 13, 88, 107, 25, 147, 58, 148, 113, 26, 116, 99, 100, 32, 124, 125, 64, 30, 71, 33, 43, 53, 129, 103, 86, 79, 65, 85, 112, 95, 17, 15, 39, 132, 80, 16, 20, 154, 155, 153, 151, 10, 152]);
                return checkDeferredModules();
            })({
                103: (function (module, __webpack_exports__, __webpack_require__) {
                    "use strict";
                    __webpack_require__.d(__webpack_exports__, "a", function () { return tasks; });
                    __webpack_require__.d(__webpack_exports__, "b", function () { return exclusiveTasks; });
                    var _dimensiondev_holoflows_kit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(430);
                    var _dimensiondev_holoflows_kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);
                    var _database_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
                    var _settings_settings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(26);
                    var _utils_memoize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(138);
                    var _utils_safeRequire__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(186);
                    var _utils_type_transform_Serialization__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(122);
                    var _utils_side_effects__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(147);
                    var _utils_dom__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(86);
                    var _utils_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(12);
                    var _utils_flags__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(34);
                    function getActivatedUI() {
                        return Object(_utils_safeRequire__WEBPACK_IMPORTED_MODULE_5__["a"])();
                    }
                    const _tasks = {
                        getPostContent: () => getActivatedUI().taskGetPostContent(),
                        getProfile: (identifier) => getActivatedUI().taskGetProfile(identifier),
                        pasteIntoPostBox: async (text, options) => getActivatedUI().taskPasteIntoPostBox(text, options),
                        async fetch(...args) {
                            return fetch(...args).then((x) => x.text());
                        },
                        memoizeFetch: Object(_utils_memoize__WEBPACK_IMPORTED_MODULE_4__["a"])((url) => {
                            return fetch(url).then((x) => x.text());
                        }, (x) => x),
                        async SetupGuide(for_) {
                            getActivatedUI().taskStartSetupGuide(for_);
                        },
                        async noop() { },
                    };
                    const realTasks = Object(_dimensiondev_holoflows_kit__WEBPACK_IMPORTED_MODULE_0__["a"])(_tasks, {
                        memorable: true,
                        AsyncCallOptions: { serializer: _utils_type_transform_Serialization__WEBPACK_IMPORTED_MODULE_6__["a"], strict: false },
                    });
                    Object.assign(globalThis, { tasks: _tasks, sleep: _utils_utils__WEBPACK_IMPORTED_MODULE_9__["s"] });
                    function tasks(...args) {
                        const [tabIdOrUri, options] = args;
                        if (_settings_settings__WEBPACK_IMPORTED_MODULE_3__["o"].value && Number.isNaN(Number(tabIdOrUri))) {
                            if (!options || !options.active)
                                throw new Error(`You have disabled "Disable fetching public keys in the background" in the settings so Maskbook can not perform this action`);
                        }
                        if (realTasks)
                            return realTasks(...args);
                        return _tasks;
                    }
                    const uriCanDoTask = (tabUri, targetUri) => {
                        if (tabUri === null || tabUri === void 0 ? void 0 : tabUri.startsWith(targetUri))
                            return true;
                        return false;
                    };
                    function exclusiveTasks(...args) {
                        const [uri, options = {}, ...others] = args;
                        const updatedOptions = {
                            active: true,
                            memorable: false,
                            autoClose: false,
                        };
                        if (!_utils_flags__WEBPACK_IMPORTED_MODULE_10__["a"].has_no_browser_tab_ui)
                            return tasks(uri, { ...updatedOptions, ...options }, ...others);
                        let _key;
                        let _args;
                        async function p() {
                            const tabs = await browser.tabs.query({});
                            const target = uri.toString().replace(/\/.+$/, '');
                            const [tab] = tabs.filter((tab) => { var _a; return (_a = tab.url) === null || _a === void 0 ? void 0 : _a.startsWith(target); });
                            if (tab) {
                                Object.assign(updatedOptions, {
                                    runAtTabID: tab.id,
                                    needRedirect: !uriCanDoTask(tab.url, uri),
                                    url: uri,
                                });
                            }
                            Object.assign(updatedOptions, options);
                            const task = tasks(uri, updatedOptions, ...others);
                            if (_key in task)
                                return task[_key](..._args);
                            return task;
                        }
                        const promise = p();
                        return new Proxy({}, {
                            get(_, key) {
                                if (key === 'then')
                                    return undefined;
                                _key = key;
                                return (...args) => {
                                    _args = args;
                                    return promise;
                                };
                            },
                        });
                    }
                    _utils_side_effects__WEBPACK_IMPORTED_MODULE_7__["a"].then(_utils_dom__WEBPACK_IMPORTED_MODULE_8__["c"]).then(() => {
                        if (!Object(_dimensiondev_holoflows_kit__WEBPACK_IMPORTED_MODULE_1__["g"])(_dimensiondev_holoflows_kit__WEBPACK_IMPORTED_MODULE_1__["a"].ContentScript))
                            return;
                        const network = getActivatedUI().networkIdentifier;
                        const id = _settings_settings__WEBPACK_IMPORTED_MODULE_3__["l"][network].value;
                        const onStatusUpdate = (id) => {
                            const { persona, status } = JSON.parse(id || '{}');
                            if (persona && status)
                                _tasks.SetupGuide(_database_type__WEBPACK_IMPORTED_MODULE_2__["Identifier"].fromString(persona, _database_type__WEBPACK_IMPORTED_MODULE_2__["ECKeyIdentifier"]).unwrap());
                        };
                        _settings_settings__WEBPACK_IMPORTED_MODULE_3__["l"][network].addListener(onStatusUpdate);
                        _settings_settings__WEBPACK_IMPORTED_MODULE_3__["l"][network].readyPromise.then(onStatusUpdate);
                        onStatusUpdate(id);
                    });
                }),
                1517: (function (module, exports, __webpack_require__) {
                    __webpack_require__(1518);
                    module.exports = __webpack_require__(344);
                }),
                1518: (function (module, __webpack_exports__, __webpack_require__) {
                    "use strict";
                    __webpack_require__.r(__webpack_exports__);
                    var _setup_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(479);
                    var _dimensiondev_holoflows_kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);
                    if (Object(_dimensiondev_holoflows_kit__WEBPACK_IMPORTED_MODULE_1__["g"])(_dimensiondev_holoflows_kit__WEBPACK_IMPORTED_MODULE_1__["a"].ContentScript)) {
                        console.log('Maskbook content script loaded');
                        __webpack_require__(1519);
                    }
                    __webpack_exports__["default"] = (undefined);
                }),
                1519: (function (module, __webpack_exports__, __webpack_require__) {
                    "use strict";
                    __webpack_require__.r(__webpack_exports__);
                    var _tasks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(103);
                    var _dimensiondev_holoflows_kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45);
                    Object.assign(window, _dimensiondev_holoflows_kit__WEBPACK_IMPORTED_MODULE_1__);
                }),
                558: (function (module, exports, __webpack_require__) {
                    "use strict";
                    Object.defineProperty(exports, "__esModule", { value: true });
                    var MixedMap = (function () {
                        function MixedMap() {
                        }
                        MixedMap.prototype.has = function (key) {
                            return this.getMap(key).has(key);
                        };
                        MixedMap.prototype.get = function (key) {
                            return this.getMap(key).get(key);
                        };
                        MixedMap.prototype.set = function (key, value) {
                            this.getMap(key).set(key, value);
                            return this;
                        };
                        MixedMap.prototype.delete = function (key) {
                            return this.getMap(key).delete(key);
                        };
                        MixedMap.prototype.getMap = function (key) {
                            if (typeof key === 'object' && key !== null) {
                                if (this.weakMap) {
                                    return this.weakMap;
                                }
                                else {
                                    return this.weakMap = new WeakMap();
                                }
                            }
                            else {
                                if (this.map) {
                                    return this.map;
                                }
                                else {
                                    return this.map = new Map();
                                }
                            }
                        };
                        return MixedMap;
                    }());
                    exports.MixedMap = MixedMap;
                    exports.default = MixedMap;
                })
            });
        }
    };
}); });
